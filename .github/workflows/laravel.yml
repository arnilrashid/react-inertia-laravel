name: Laravel React Inertia CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]
        php-version: [8.1, 8.2]

    steps:
    # Check out the code from the repository
    - uses: actions/checkout@v4

    # Set up Node.js environment
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Install Node.js dependencies
    - run: npm ci

    # Build front-end assets
    - run: npm run build --if-present

    # Set up PHP environment
    - name: Setup PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, pdo, sqlite
        coverage: none

    # Cache Composer dependencies
    - name: Cache Composer Dependencies
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    # Install PHP dependencies
    - name: Install Composer Dependencies
      run: composer install --no-progress --no-suggest

    # Set up Laravel environment
    - name: Create .env File
      run: cp .env.example .env

    # Generate application key
    - name: Generate Application Key
      run: php artisan key:generate

    # Run migrations using SQLite
    - name: Run Migrations
      run: php artisan migrate --force

    # Run backend and frontend tests
    - name: Run PHP Tests
      run: php artisan test

    - name: Run Node.js Tests
      run: npm test
